version: '3'
services:
  frontend:
    build:
      context: ./frontend
      args:
        - NODE_ENV=${NODE_ENV:-development}
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NODE_OPTIONS="--max-old-space-size=2048"
    command: sh -c "if [ \"$NODE_ENV\" = \"production\" ]; then npm run start; else npm run dev; fi"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://postgres:heslo@db:5432/fve_db
    volumes:
      - ./backend/api/migrations:/app/api/migrations  # Správná cesta

  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=fve_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=heslo
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    depends_on:
      - db

volumes:
  postgres_data:
    name: fve_webapplication_postgres_data